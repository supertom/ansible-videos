- name: Compute Engine Network
  hosts: localhost
  vars:
    ../gce_vars/auth
    ../infra_vars/network-prod
    customnetworkname: my-network
    autonetworkname: my-auto-network
    legacynetworkname: my-legacy-network
    fwname: my-firewall
    subnetworkname: my-subnetwork
#    service_account_email: demo-ansible@supertom-graphite.iam.gserviceaccount.com
#    credentials_file: /home/supertom/keys/demo-ansible.json
#    project_id: supertom-graphite
  tasks:
      - name: Create Legacy Network
        gce_net:
          name: "{{ legacynetworkname }}"
          ipv4_range: '10.240.17.0/24'
          mode: legacy
          state: "present"
        register: result
      - name: "assert legacy network created"
        assert:
          that:
            # - 'result.changed'
            - 'result.state == "present"'
      - name: Create Auto Network
        gce_net:
          name: "{{ autonetworkname }}"
          mode: auto
          state: "present"
        register: result
      - name: "assert auto network created"
        assert:
          that:
            # - 'result.changed'
            - 'result.state == "present"'
      - name: Create Network with custom Subnetwork
        gce_net:
          name: "{{ customnetworkname }}"
          mode: custom
          subnet_name: "{{ subnetworkname }}"
          subnet_region: us-east1
          ipv4_range: '10.240.16.0/24'
          state: "present"
        register: result
      - name: "assert subnetwork network created"
        assert:
          that:
            # - 'result.changed'
            - 'result.state == "present"'
      # TODO(supertom): there's a bug here I believe with ports
      - name: Create Firewall Rule
        gce_net:
          name: default
          fwname: "{{ fwname }}"
          allowed: tcp:80
          state: "present"
          src_tags: "foo,bar"
          src_range: ['10.2.1.1/32']
        register: result
      - name: "assert fw created"
        assert:
          that:
            - 'result.changed'
            - 'result.state == "present"'
      - name: Update Firewall Rule
        gce_net:
          name: default
          fwname: "{{ fwname }}"
          allowed: tcp:81
          state: "present"
          src_tags: "foo,bar,baz"
        register: result
      - name: "assert fw updated"
        assert:
          that:
            - 'result.changed'
            - 'result.state == "present"'
            - 'result.src_tags|length == 3'
      - name: Update Firewall Rule w/icmp (no port)
        gce_net:
          name: default
          fwname: "{{ fwname }}"
          allowed: tcp:81;icmp
          state: "present"
          src_tags: "foo,bar,baz"
        register: result
      - name: "assert fw updated"
        assert:
          that:
            - 'result.changed'
            - 'result.state == "present"'
            - 'result.src_tags|length == 3'
      - name: Update Firewall Rule w/source range
        gce_net:
          name: default
          fwname: "{{ fwname }}"
          allowed: tcp:81
          state: "present"
          src_tags: "foo,bar,baz"
          src_range: ['10.1.1.1/32']
        register: result
      - name: "assert fw updated source range"
        assert:
          that:
            - 'result.changed'
            - 'result.state == "present"'
            - 'result.src_range|length == 1'
      - name: Delete Legacy Network
        gce_net:
          name: "{{ legacynetworkname }}"
          state: "absent"
        register: result
        tags: delete
      - name: "assert legacy network deleted"
        tags: delete
        assert:
          that:
            # - 'result.changed'
            - 'result.state == "absent"'
      - name: Delete auto Network
        gce_net:
          name: "{{ autonetworkname }}"
          state: "absent"
        register: result
        tags: delete
      - name: "assert auto network deleted"
        tags: delete
        assert:
          that:
            # - 'result.changed'
            - 'result.state == "absent"'
      - name: Delete SubNetwork of Custom Network
        gce_net:
          name: "{{ customnetworkname }}"
          subnet_name: "{{ subnetworkname }}"
          subnet_region: "us-east1"
          state: "absent"
        register: result
        tags: delete
      - pause: seconds=30
      - name: "assert custom subnetwork deleted"
        tags: delete
        assert:
          that:
            # - 'result.changed'
            - 'result.state == "absent"'
      - name: Delete Custom Network
        gce_net:
          name: "{{ customnetworkname }}"
          state: "absent"
        register: result
        tags: delete
      - name: "assert custom network deleted"
        tags: delete
        assert:
          that:
            # - 'result.changed'
            - 'result.state == "absent"'
